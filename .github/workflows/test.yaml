name: Lint and test

on:
  push:
    branches:
      - main
      - master
      - develop
  pull_request:
    branches:
      - main
      - master
      - develop

defaults:
  run:
    shell: bash

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      TEST_ENV: 'production'

    services:
      redis:
        image: 'redis:8.0.1'
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v4

      - run: cp install/package.json package.json

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: NPM Install
        uses: bahmutov/npm-install@v1
        with:
          useLockFile: false

      - name: Setup on Redis
        env:
          SETUP: >-
            {
              "url": "http://127.0.0.1:4567/forum",
              "secret": "abcdef",
              "admin:username": "admin",
              "admin:email": "test@example.org",
              "admin:password": "hAN3Eg8W",
              "admin:password:confirm": "hAN3Eg8W",

              "database": "redis",
              "redis:host": "127.0.0.1",
              "redis:port": 6379,
              "redis:password": "",
              "redis:database": 0
            }
          CI: >-
            {
              "host": "127.0.0.1",
              "database": 1,
              "port": 6379
            }
        run: |
          node app --setup="${SETUP}" --ci="${CI}"

      - name: Run ESLint
        run: npm run lint

      - name: Node tests
        run: npm test

      - name: Extract coverage info
        run: npm run coverage

      - name: Test coverage
        uses: coverallsapp/github-action@v2

      # ---------- NEW: start NodeBB, run Artillery, stop NodeBB ----------
      - name: Start NodeBB (background)
        run: |
          npm start &
          echo $! > nodebb.pid

      - name: Wait for NodeBB
        run: |
          npx wait-on http://127.0.0.1:4567 --timeout 30000

      - name: Run Artillery load test
        run: npm run load:test

      - name: Stop NodeBB
        if: always()
        run: |
          if [ -f nodebb.pid ]; then
            kill "$(cat nodebb.pid)" || true
          else
            pkill -f "node loader.js" || true
          fi
